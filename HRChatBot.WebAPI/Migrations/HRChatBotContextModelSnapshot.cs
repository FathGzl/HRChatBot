// <auto-generated />
using System;
using HRChatBot.WebAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace HRChatBot.WebAPI.Migrations
{
    [DbContext(typeof(HRChatBotContext))]
    partial class HRChatBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("HRChatBot.WebAPI.Models.ChatHistory", b =>
                {
                    b.Property<long>("ChatHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("chat_history_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("created_date");

                    b.Property<long>("FromUserId")
                        .HasColumnType("INT")
                        .HasColumnName("from_user_id");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<long>("ToUserId")
                        .HasColumnType("INT")
                        .HasColumnName("to_user_id");

                    b.HasKey("ChatHistoryId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("ChatHistory", (string)null);
                });

            modelBuilder.Entity("HRChatBot.WebAPI.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("AboutMe")
                        .HasColumnType("TEXT")
                        .HasColumnName("about_me");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("created_date");

                    b.Property<long?>("DarkTheme")
                        .HasColumnType("INTEGER")
                        .HasColumnName("dark_theme");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<long?>("Notifications")
                        .HasColumnType("INTEGER")
                        .HasColumnName("notifications");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("ProfilePicDataUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("profile_pic_data_url");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("profile_picture_url");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT")
                        .HasColumnName("role");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("source");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HRChatBot.WebAPI.Models.ChatHistory", b =>
                {
                    b.HasOne("HRChatBot.WebAPI.Models.User", "FromUser")
                        .WithMany("ChatHistoryFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired();

                    b.HasOne("HRChatBot.WebAPI.Models.User", "ToUser")
                        .WithMany("ChatHistoryToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("HRChatBot.WebAPI.Models.User", b =>
                {
                    b.Navigation("ChatHistoryFromUsers");

                    b.Navigation("ChatHistoryToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
